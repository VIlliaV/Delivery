{"version":3,"file":"static/js/145.c1b0691e.chunk.js","mappings":"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","sources":["pages/ShoppingCart/ShoppingCart.styled.js","components/User/User.styled.js","components/User/User.jsx","pages/ShoppingCart/ShoppingCart.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  padding: 110px 50px 110px;\n  & .shop_info {\n    display: flex;\n    & .shop_menu {\n      flex: 1 0 70%;\n      max-height: 60vh;\n    }\n\n    & .noOrder {\n      display: flex;\n      flex-direction: column;\n      align-items: center;\n    }\n    & ul {\n      width: 100%;\n      display: flex;\n\n      justify-content: center;\n      flex-wrap: wrap;\n      gap: 35px;\n      padding: 10px;\n      /* max-width: 1600px; */\n\n      overflow: auto;\n      border: 1px solid var(--second);\n      border-radius: 5px;\n    }\n\n    & .shop_total {\n      display: flex;\n      justify-content: space-evenly;\n      align-items: center;\n      height: 10vh;\n      font-style: normal;\n      font-weight: 600;\n      font-size: 36px;\n      line-height: 22px;\n    }\n  }\n`;\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  flex: 1 0 30%;\n  max-width: 30vw;\n  & label {\n    display: flex;\n    align-items: center;\n    font-family: 'Montserrat', sans-serif;\n    font-style: normal;\n    font-weight: 600;\n    font-size: 16px;\n    line-height: 22px;\n    color: var(--primary);\n\n    & span {\n      width: 20%;\n    }\n    & input {\n      height: 30px;\n      min-width: 60%;\n      padding-left: 10px;\n      font-style: normal;\n      font-weight: 600;\n      font-size: 16px;\n      line-height: 22px;\n      border: 1px solid black;\n      box-shadow: 0px 3.43693px 3.43693px rgba(0, 0, 0, 0.25);\n      border-radius: 5px;\n    }\n  }\n`;\n","import { useState } from 'react';\nimport { Container } from './User.styled';\n\nconst User = ({ onSubmit }) => {\n  const [name, setName] = useState('');\n  const [phone, setPhone] = useState('');\n  const [email, setEmail] = useState('');\n  const [address, setAddress] = useState('');\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const user = { name, phone, email, address };\n    onSubmit(user);\n    setName('');\n    setPhone('');\n    setEmail('');\n    setAddress('');\n  };\n\n  return (\n    <Container>\n      <form id=\"user-form\" onSubmit={handleSubmit}>\n        <label>\n          <span> Name:</span>\n          <input\n            type=\"text\"\n            placeholder=\"Bill Mac Donald\"\n            value={name}\n            onChange={e => setName(e.target.value)}\n            required\n          />\n        </label>\n        <br />\n        <label>\n          <span> Phone:</span>\n          <input\n            type=\"tel\"\n            placeholder=\"067673232\"\n            value={phone}\n            onChange={e => setPhone(e.target.value)}\n            required\n          />\n        </label>\n        <br />\n        <label>\n          <span> Email:</span>\n          <input\n            type=\"email\"\n            value={email}\n            placeholder=\"delivery@testy.com\"\n            onChange={e => setEmail(e.target.value)}\n            required\n          />\n        </label>\n        <br />\n        <label>\n          <span> Address:</span>\n          <input\n            type=\"text\"\n            value={address}\n            placeholder=\"London\"\n            onChange={e => setAddress(e.target.value)}\n          />\n        </label>\n        <br />\n      </form>\n    </Container>\n  );\n};\n\nexport default User;\n","import { useEffect, useState } from 'react';\nimport { Container } from './ShoppingCart.styled';\nimport {\n  changeLocalAdd,\n  changeLocalCompany,\n  getLocalAdd,\n} from 'services/Local/local';\nimport MenuCard from 'components/MenuCard/MenuCard';\nimport User from 'components/User/User';\nimport Button from 'components/Button/Button';\nimport { putUserData } from 'services/API';\nimport noOrder from 'images/noOrder.jpg';\nimport { fetchUserData } from 'services/API/APIUsers';\n\nconst ShoppingCart = () => {\n  const [order, setOrder] = useState([]);\n  const [total, setTotal] = useState(0);\n\n  const rerenderPageForFilter = () => {\n    const isAdded = getLocalAdd();\n    const addedMenu = isAdded.map(item => (item = item.menuItem));\n    setOrder(addedMenu);\n  };\n\n  useEffect(() => {\n    if (!getLocalAdd()) changeLocalAdd([]);\n    rerenderPageForFilter();\n  }, []);\n\n  const changeTotal = itemCoast => {\n    setTotal(prevState => prevState + itemCoast);\n  };\n\n  const onSubmit = async user => {\n    user.menu = order;\n    const data = await fetchUserData();\n    const isUserAdded = data.find(item => item.email === user.email);\n    if (isUserAdded) {\n      console.log('вже додано :>> ', isUserAdded.id);\n    } else putUserData(user);\n\n    setTotal(0);\n    setOrder([]);\n    changeLocalAdd([]);\n    changeLocalCompany('');\n  };\n\n  return (\n    <Container>\n      <div className=\"shop_info\">\n        <User onSubmit={onSubmit} />\n        <div className=\"shop_menu\">\n          {!order.length ? (\n            <div className=\"noOrder\">\n              <h2>Please make your choice first</h2>\n              <img src={noOrder} alt=\"no order\" width=\"600\" height=\"600\" />\n            </div>\n          ) : (\n            <ul>\n              {order.map(menuItem => (\n                <MenuCard\n                  key={menuItem.id}\n                  changeTotal={changeTotal}\n                  menuItem={menuItem}\n                  visible=\"true\"\n                  rerender={rerenderPageForFilter}\n                  styleCart={{\n                    flexDirectionCart: 'row',\n                    widthImg: '140',\n                    widthDiv: '200',\n                  }}\n                />\n              ))}\n            </ul>\n          )}\n\n          <div className=\"shop_total\">\n            <p>Total: {total} грн</p>\n            <Button type=\"submit\" form=\"user-form\" disabled={!total}>\n              SUBMIT\n            </Button>\n          </div>\n        </div>\n      </div>\n    </Container>\n  );\n};\n\nexport default ShoppingCart;\n"],"names":["Container","styled","_templateObject","_taggedTemplateLiteral","_ref","onSubmit","_useState","useState","_useState2","_slicedToArray","name","setName","_useState3","_useState4","phone","setPhone","_useState5","_useState6","email","setEmail","_useState7","_useState8","address","setAddress","_jsx","children","_jsxs","id","e","preventDefault","type","placeholder","value","onChange","target","required","order","setOrder","total","setTotal","rerenderPageForFilter","addedMenu","getLocalAdd","map","item","menuItem","useEffect","changeLocalAdd","changeTotal","itemCoast","prevState","_asyncToGenerator","_regeneratorRuntime","mark","_callee","user","data","isUserAdded","wrap","_context","prev","next","menu","fetchUserData","sent","find","console","log","putUserData","changeLocalCompany","stop","_x","apply","arguments","className","User","length","MenuCard","visible","rerender","styleCart","flexDirectionCart","widthImg","widthDiv","src","noOrder","alt","width","height","Button","form","disabled"],"sourceRoot":""}