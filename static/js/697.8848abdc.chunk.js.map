{"version":3,"file":"static/js/697.8848abdc.chunk.js","mappings":"iOAEaA,E,QAAYC,GAAAA,IAAUC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,y6B,oBCFtBC,EAAe,SAAAC,GAC1B,IACMC,EAAO,IAAIC,KADEF,GAGbG,EAAOF,EAAKG,cACZC,EAAQJ,EAAKK,WAAa,EAC1BC,EAAMN,EAAKO,UACXC,EAAQR,EAAKS,WACbC,EAAUV,EAAKW,aAGrB,MADmB,GAAAC,OAAMV,EAAI,KAAAU,OAAIR,EAAK,KAAAQ,OAAIN,EAAG,KAAAM,OAAIJ,EAAK,KAAAI,OAAIF,EAE5D,E,SCmEA,EAtEgB,WACd,IAAAG,GAAgCC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAArCI,EAAQF,EAAA,GAAEG,EAAWH,EAAA,GAEtBI,EAAQ,eAAAC,GAAAC,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAC,EAAMC,GAAK,IAAAC,EAAA3B,EAAA4B,EAAAC,EAAAC,EAAA,OAAAP,EAAAA,EAAAA,KAAAQ,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACO,GAA3BP,EAAQD,EAAMS,OAAOC,MAET,UAAdV,EAAMW,IAAe,CAAAL,EAAAE,KAAA,gBAAAF,EAAAE,KAAA,GACJI,EAAAA,EAAAA,MAAgB,KAAD,EAC0B,GADtDtC,EAAIgC,EAAAO,OACJX,EAAc5B,EAAKwC,MAAK,SAAAC,GAAI,OAAIA,EAAKd,QAAUA,CAAK,KAE1C,CAADK,EAAAE,KAAA,gBAAAF,EAAAE,KAAA,GACUQ,EAAAA,EAAAA,IAAkBd,EAAYe,IAAI,KAAD,EAAAd,EAAAG,EAAAO,KAAhDT,EAAID,EAAJC,KAERX,EAAYW,GAAME,EAAAE,KAAA,iBAElBU,EAAAA,GAAAA,QAAc,0JAAkC,yBAAAZ,EAAAa,OAAA,GAAApB,EAAA,KAGrD,gBAfaqB,GAAA,OAAAzB,EAAA0B,MAAA,KAAAC,UAAA,KAiBd,OACEC,EAAAA,EAAAA,MAACtD,EAAS,CAAAuD,SAAA,EACRC,EAAAA,EAAAA,KAAA,SACEC,KAAK,QACLC,YAAY,qBACZC,UAAWlC,EACXmC,UAAQ,EACRC,aAAa,WAEfL,EAAAA,EAAAA,KAAA,OAAKM,UAAU,YAAWP,SACtBhC,EAASwC,QAMTP,EAAAA,EAAAA,KAAAQ,EAAAA,SAAA,CAAAT,UACEC,EAAAA,EAAAA,KAAA,MAAAD,SACGhC,EAAS0C,KAAI,SAAAC,GAAK,OACjBZ,EAAAA,EAAAA,MAAA,MAAIQ,UAAU,gBAAeP,SAAA,EAC3BD,EAAAA,EAAAA,MAAA,KAAGQ,UAAU,YAAWP,SAAA,CAAC,SAAOnD,EAAa8D,EAAMlB,IAAI,QACvDQ,EAAAA,EAAAA,KAAA,MAAIM,UAAU,aAAYP,SACvBW,EAAMA,MAAMD,KAAI,SAAAE,GAAQ,OACvBX,EAAAA,EAAAA,KAACY,EAAAA,EAAQ,CACPC,oBAAoB,EAEpBF,SAAUA,EACVG,QAAQ,QACRC,UAAW,WAAO,EAClBC,UAAW,CACTC,kBAAmB,MACnBC,SAAU,MACVC,SAAU,QAPPR,EAASnB,GASd,OAGNQ,EAAAA,EAAAA,KAAA,OAAKM,UAAU,aAAYP,UACzBD,EAAAA,EAAAA,MAAA,KAAAC,SAAA,CAAG,UAAQW,EAAMU,WAAW,6BAE3B,SA7BXtB,EAAAA,EAAAA,MAAA,OAAKQ,UAAU,UAASP,SAAA,EACtBC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,6BACJC,EAAAA,EAAAA,KAAA,OAAKqB,IAAKC,EAASC,IAAI,WAAWC,MAAM,MAAMC,OAAO,eAmCjE,C","sources":["pages/History/History.styled.js","utils/data.js","pages/History/History.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Container = styled.div`\n  display: flex;\n  flex-direction: column;\n\n  align-items: center;\n  padding: 110px 50px 110px;\n\n  & .past_allOrder {\n    border: 1px solid var(--second);\n    border-radius: 5px;\n    margin-bottom: 20px;\n  }\n\n  & .past_order {\n    width: 100%;\n    display: flex;\n\n    justify-content: center;\n    flex-wrap: wrap;\n    gap: 35px;\n    padding: 10px;\n  }\n\n  & .shop_total,\n  .past_data {\n    display: flex;\n    justify-content: space-evenly;\n    align-items: center;\n    padding: 5px;\n    font-style: normal;\n    font-weight: 600;\n    font-size: 24px;\n    line-height: 22px;\n  }\n\n  & input {\n    height: 30px;\n    width: 50%;\n    margin-bottom: 20px;\n    padding-left: 10px;\n    font-style: normal;\n    font-weight: 600;\n    font-size: 16px;\n    line-height: 22px;\n    border: 1px solid black;\n    box-shadow: 0px 3.43693px 3.43693px rgba(0, 0, 0, 0.25);\n    border-radius: 5px;\n  }\n`;\n","export const dateFormater = data => {\n  const dateString = data;\n  const date = new Date(dateString);\n\n  const year = date.getFullYear();\n  const month = date.getMonth() + 1;\n  const day = date.getDate();\n  const hours = date.getHours();\n  const minutes = date.getMinutes();\n\n  const formattedDate = `${year}-${month}-${day} ${hours}:${minutes}`;\n  return formattedDate;\n};\n","import noOrder from 'images/noOrder.jpg';\nimport { useState } from 'react';\n\nimport { fetchUserData, fetchUserDataByID } from 'services/API/APIUsers';\nimport { Container } from './History.styled';\nimport { toast } from 'react-hot-toast';\nimport MenuCard from 'components/MenuCard/MenuCard';\nimport { dateFormater } from 'utils/data';\n\nconst History = () => {\n  const [allOrder, setAllOrder] = useState([]);\n\n  const findUser = async event => {\n    const email = event.target.value;\n\n    if (event.key === 'Enter') {\n      const data = await fetchUserData();\n      const isUserAdded = data.find(item => item.email === email);\n\n      if (isUserAdded) {\n        const { menu } = await fetchUserDataByID(isUserAdded.id);\n\n        setAllOrder(menu);\n      } else {\n        toast.success(`зробіть хоч одне замовлення)))`);\n      }\n    }\n  };\n\n  return (\n    <Container>\n      <input\n        type=\"email\"\n        placeholder=\"delivery@testy.com\"\n        onKeyDown={findUser}\n        required\n        autoComplete=\"email\"\n      />\n      <div className=\"shop_menu\">\n        {!allOrder.length ? (\n          <div className=\"noOrder\">\n            <h2>Please enter your email</h2>\n            <img src={noOrder} alt=\"no order\" width=\"600\" height=\"600\" />\n          </div>\n        ) : (\n          <>\n            <ul>\n              {allOrder.map(order => (\n                <li className=\"past_allOrder\">\n                  <p className=\"past_data\">Date: {dateFormater(order.id)} </p>\n                  <ul className=\"past_order\">\n                    {order.order.map(menuItem => (\n                      <MenuCard\n                        vivsibleForHistory={false}\n                        key={menuItem.id}\n                        menuItem={menuItem}\n                        visible=\"false\"\n                        companyId={() => {}}\n                        styleCart={{\n                          flexDirectionCart: 'row',\n                          widthImg: '140',\n                          widthDiv: '200',\n                        }}\n                      />\n                    ))}\n                  </ul>\n                  <div className=\"shop_total\">\n                    <p>Total: {order.totalPrice} грн</p>\n                  </div>\n                </li>\n              ))}\n            </ul>\n          </>\n        )}\n      </div>\n    </Container>\n  );\n};\n\nexport default History;\n"],"names":["Container","styled","_templateObject","_taggedTemplateLiteral","dateFormater","data","date","Date","year","getFullYear","month","getMonth","day","getDate","hours","getHours","minutes","getMinutes","concat","_useState","useState","_useState2","_slicedToArray","allOrder","setAllOrder","findUser","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","event","email","isUserAdded","_yield$fetchUserDataB","menu","wrap","_context","prev","next","target","value","key","fetchUserData","sent","find","item","fetchUserDataByID","id","toast","stop","_x","apply","arguments","_jsxs","children","_jsx","type","placeholder","onKeyDown","required","autoComplete","className","length","_Fragment","map","order","menuItem","MenuCard","vivsibleForHistory","visible","companyId","styleCart","flexDirectionCart","widthImg","widthDiv","totalPrice","src","noOrder","alt","width","height"],"sourceRoot":""}